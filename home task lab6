# Importing necessary libraries
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

# Load dataset from GitHub
url = "https://raw.githubusercontent.com/bmharsha18/Linear-regression-with-one-variable/master/dataset.csv"
df = pd.read_csv(url)

# Inspect the dataset
print(df.head())

# Split the dataset into features (X) and target (y)
X = df.iloc[:, :-1].values  # Assuming the last column is the target variable
y = df.iloc[:, -1].values

# Splitting the dataset into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Training the linear regression model
model = LinearRegression()
model.fit(X_train, y_train)

# Predicting on the test set
y_pred = model.predict(X_test)

# Evaluating the model
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

# Model coefficients
intercept = model.intercept_
slope = model.coef_[0]

# Output metrics
print(f"Intercept: {intercept}")
print(f"Slope: {slope}")
print(f"Mean Squared Error: {mse}")
print(f"RÂ² Score: {r2}")

# Plotting the data and regression line
plt.figure(figsize=(10, 6))
plt.scatter(X, y, color='blue', label='Data Points')
plt.plot(X_test, y_pred, color='red', label='Regression Line')
plt.xlabel('Independent Variable (X)')
plt.ylabel('Dependent Variable (y)')
plt.title('Linear Regression Fit')
plt.legend()
plt.show()
